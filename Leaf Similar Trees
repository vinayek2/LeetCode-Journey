/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

 #include <iostream>
class Solution {
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {

        std::vector<int> vect_one; 
        std::vector<int> vect_two; 
        leafSequence(root1, vect_one);
        leafSequence(root2, vect_two);
        
        return vect_one == vect_two; 
        
        
    }


    void leafSequence(TreeNode* root, vector<int>& leaf_nodes){



        if(root == nullptr){

            return ; 
            
        }


        if(root -> right == nullptr && root -> left == nullptr){
            leaf_nodes.push_back(root -> val);

            return; 
            
            
        }

        leafSequence(root -> left, leaf_nodes); 
        leafSequence(root -> right, leaf_nodes);
        
    }
};
