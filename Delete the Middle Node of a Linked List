/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) {
    if(head == nullptr){
        return head; 
    }
    if(head -> next == nullptr){
        return nullptr; 
    }
    // ListNode* tracker = head; 
    ListNode* track_size = head;
    int size = 0; 
    while(track_size != nullptr){
        size++; 
        track_size = track_size -> next; 

    }
    int i = 0; 
    ListNode* current = head;

    ListNode* previous = nullptr;
    while(current != nullptr){ 
        if(i == size/2){

            previous -> next = current -> next; 


             break; 
        }

        previous = current; 

        current = current -> next; 

        i++;
        
    }
    return head; 
    }
};
